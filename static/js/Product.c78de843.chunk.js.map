{"version":3,"sources":["components/Shop/shop.styles.js","components/Shop/Header.jsx","components/Shop/ProductItem.jsx","components/Shop/ProductList.jsx","redux/shop/operations.js","components/Shop/Shop.jsx","views/ProductView.jsx","redux/shop/selectors.js"],"names":["createUseStyles","shop","display","flexDirection","overflow","header","marginBottom","toolbar","title","flex","productList","listStyle","padding","margin","productItem","iconButton","alignSelf","Header","classes","useStyles","count","useSelector","getCartCountSelector","total","getCartTotalSelector","cartIsLoading","getCartIsLoadingSelector","AppBar","className","position","Toolbar","to","IconButton","Badge","badgeContent","color","style","ProductItem","id","getShopItemSelector","name","price","cart","getCartItemSelector","dispatch","useDispatch","Card","onClick","shopCartDelete","shopCartAdd","Date","now","productId","CardActionArea","ProductList","items","getShopItemsSelector","getIsLoadingSelector","map","axios","defaults","baseURL","Shop","useEffect","shopItemsRequest","get","then","data","shopItemsSuccess","catch","error","shopItemsFailure","message","cartItemsRequest","cartItemsSuccess","cartItemsFailure","ProductView","state","find","item","reduce","acc","getCartItemsSelector","amount","isLoading"],"mappings":"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","file":"static/js/Product.c78de843.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nexport default createUseStyles({\n  shop: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  header: {\n    marginBottom: 15,\n  },\n  toolbar: {\n    display: 'flex',\n  },\n  title: {\n    flex: 1,\n  },\n  productList: {\n    overflow: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    margin: 0,\n  },\n  productItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n  iconButton: {\n    alignSelf: 'flex-end',\n  },\n});\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport {\n  getCartCountSelector,\n  getCartTotalSelector,\n  getCartIsLoadingSelector,\n} from '../../redux/shop/selectors';\nimport useStyles from './shop.styles';\n\nconst Header = () => {\n  const classes = useStyles();\n  const count = useSelector(getCartCountSelector);\n  const total = useSelector(getCartTotalSelector);\n  const cartIsLoading = useSelector(getCartIsLoadingSelector);\n\n  return (\n    <AppBar className={classes.header} position=\"static\">\n      <Toolbar className={classes.toolbar}>\n        <h2 className={classes.title}>My Awesome Shop</h2>\n\n        {cartIsLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h3>total: {total}</h3>\n            <Link to=\"/cart\">\n              <IconButton>\n                <Badge badgeContent={count} color=\"secondary\">\n                  <ShoppingCartOutlinedIcon style={{ color: '#fff' }} />\n                </Badge>\n              </IconButton>\n            </Link>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { useSelector, useDispatch } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport { CardActionArea, IconButton } from '@material-ui/core';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\nimport {\n  getShopItemSelector,\n  getCartItemSelector,\n} from '../../redux/shop/selectors';\nimport { shopCartAdd, shopCartDelete } from '../../redux/shop/actions';\nimport useStyles from './shop.styles';\n\nconst ProductItem = ({ id }) => {\n  const classes = useStyles();\n  const { name, price, count } = useSelector(getShopItemSelector(id));\n  const cart = useSelector(getCartItemSelector(id));\n  const dispatch = useDispatch();\n\n  const handleCartClick = () => {\n    if (cart) {\n      dispatch(shopCartDelete(id));\n    } else {\n      dispatch(\n        shopCartAdd({\n          id: Date.now(),\n          productId: id,\n          count: 1,\n        }),\n      );\n    }\n  };\n\n  return (\n    <Card className={classes.productItem}>\n      <IconButton className={classes.iconButton} onClick={handleCartClick}>\n        {cart ? <ShoppingCartIcon /> : <AddShoppingCartOutlinedIcon />}\n      </IconButton>\n\n      <CardActionArea>\n        <h4>name: {name}</h4>\n        <p>price: {price}</p>\n        <p>count left: {count}</p>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default ProductItem;\n","import { useSelector } from 'react-redux';\nimport ProductItem from './ProductItem';\nimport {\n  getShopItemsSelector,\n  getIsLoadingSelector,\n} from '../../redux/shop/selectors';\nimport useStyles from './shop.styles';\n\nconst ProductList = () => {\n  const classes = useStyles();\n  const items = useSelector(getShopItemsSelector);\n  const isLoading = useSelector(getIsLoadingSelector);\n\n  return isLoading ? (\n    <p>Loading...</p>\n  ) : (\n    <ul className={classes.productList}>\n      {items.map(({ id }) => (\n        <ProductItem key={id} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ProductList;\n","import axios from 'axios';\nimport {\n  shopItemsRequest,\n  shopItemsSuccess,\n  shopItemsFailure,\n  cartItemsRequest,\n  cartItemsSuccess,\n  cartItemsFailure,\n} from './actions';\n\naxios.defaults.baseURL = 'http://localhost:2222';\n\nexport const getShopItems = () => dispatch => {\n  dispatch(shopItemsRequest());\n\n  axios\n    .get('/shop-items')\n    .then(({ data }) => dispatch(shopItemsSuccess(data)))\n    .catch(error => dispatch(shopItemsFailure(error.message)));\n};\n\nexport const getCartItems = () => dispatch => {\n  dispatch(cartItemsRequest());\n\n  axios\n    .get('/cart')\n    .then(({ data }) => dispatch(cartItemsSuccess(data)))\n    .catch(error => dispatch(cartItemsFailure(error.message)));\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Header from './Header';\nimport ProductList from './ProductList';\nimport { getShopItems, getCartItems } from '../../redux/shop/operations';\nimport useStyles from './shop.styles';\n\nconst Shop = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // componentDidMount\n  useEffect(() => {\n    dispatch(getShopItems());\n    dispatch(getCartItems());\n  }, []); // eslint-disable-line\n\n  return (\n    <div className={classes.shop}>\n      <Header />\n      <ProductList />\n    </div>\n  );\n};\n\nexport default Shop;\n","// import Products from '../components/Products';\nimport Shop from '../components/Shop';\n\nconst ProductView = () => {\n  return (\n    <>\n      <h1>Products</h1>\n      {/* <Products /> */}\n      <Shop />\n    </>\n  );\n};\n\nexport default ProductView;\n","export const getShopItemsSelector = state => state.shop.items;\n\nexport const getShopItemSelector = id => {\n  return state => state.shop.items.find(item => item.id === id);\n};\n\nexport const getCartItemSelector = id => state =>\n  state.shop.cart.find(({ productId }) => productId === id);\n\nexport const getCartCountSelector = state =>\n  state.shop.cart.reduce((acc, item) => acc + item.count, 0);\n\nexport const getCartItemsSelector = state => state.shop.cart;\n\nexport const getCartTotalSelector = state =>\n  state.shop.cart\n    .map(\n      ({ count, productId }) =>\n        count * state.shop.items.find(({ id }) => id === productId).price,\n    )\n    .reduce((acc, amount) => acc + amount, 0);\n\nexport const getIsLoadingSelector = state => state.shop.isLoading;\nexport const getCartIsLoadingSelector = state => state.shop.cartIsLoading;\n"],"sourceRoot":""}